name: Format, Lint, and Test Go Code

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  lint-and-format:
    name: Go Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: go mod download

      - name: Run gofmt
        run: |
          gofmt_output=$(gofmt -l .)
          if [ -n "$gofmt_output" ]; then
            echo "The following files need formatting:"
            echo "$gofmt_output"
            exit 1
          fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Run tests with Docker Compose
        run: |
          # Create a directory for coverage data
          mkdir -p coverage
          chmod 777 coverage
          
          # Run tests with Docker Compose
          docker compose -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from app-test
          
          # Check if coverage file exists
          if [ ! -f coverage/coverage.out ]; then
            echo "Coverage file not found!"
            exit 1
          fi
      
      - name: Convert coverage to Coveralls format
        run: |
          go install github.com/mattn/goveralls@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          goveralls -coverprofile=coverage/coverage.out -service=github
        env:
          COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      
      - name: Clean up Docker resources
        if: always()
        run: docker compose -f docker-compose.test.yml down -v
