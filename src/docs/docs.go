// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "El mejor grupo de todos ndea deau",
            "url": "https://github.com/classconnect-grupo3",
            "email": "classconnectingsoft2@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assignments": {
            "get": {
                "description": "Get all assignments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get all assignments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Assignment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Create an assignment",
                "parameters": [
                    {
                        "description": "Assignment to create",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            }
        },
        "/assignments/course/{courseId}": {
            "get": {
                "description": "Get assignments by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get assignments by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Assignment"
                            }
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}": {
            "get": {
                "description": "Get an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get an assignment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Update an assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assignment to update",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Delete an assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions": {
            "get": {
                "description": "Get submissions by assignment ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get submissions by assignment ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Submission"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Create a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission to create",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateSubmissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}": {
            "get": {
                "description": "Get a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get a submission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Update a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission to update",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}/grade": {
            "put": {
                "description": "Grade a submission by ID (for teachers)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Grade a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Grade request",
                        "name": "gradeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.GradeSubmissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}/submit": {
            "post": {
                "description": "Submit a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Submit a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Get all courses available in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get all courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Course creation",
                "parameters": [
                    {
                        "description": "Course to create",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            }
        },
        "/courses/favourite/{studentId}": {
            "get": {
                "description": "Get favourite courses by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get favourite courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/student/{studentId}": {
            "get": {
                "description": "Get courses by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get courses by student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/teacher/{teacherId}": {
            "get": {
                "description": "Get a course by teacher ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by teacher ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "teacherId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/title/{title}": {
            "get": {
                "description": "Get a course by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course title",
                        "name": "title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/user/{userId}": {
            "get": {
                "description": "Get courses by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get courses by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Get a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Update a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course to update",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Delete a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteCourseResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}/enroll": {
            "post": {
                "description": "Enroll a student in a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Enroll a student in a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enrollment request",
                        "name": "enrollmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.EnrollStudentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/courses/{id}/enrollments": {
            "get": {
                "description": "Get enrollments by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Get enrollments by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Enrollment"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{id}/favourite": {
            "post": {
                "description": "Set a course as favourite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Set a course as favourite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Favourite course request",
                        "name": "favouriteCourseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SetFavouriteCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SetFavouriteCourseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unset a course as favourite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Unset a course as favourite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unset favourite course request",
                        "name": "unsetFavouriteCourseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UnsetFavouriteCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UnsetFavouriteCourseResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}/feedback": {
            "get": {
                "description": "Get course feedback by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Get course feedback request",
                        "name": "getCourseFeedbackRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.GetCourseFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CourseFeedback"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create course feedback by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Create course feedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course feedback",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCourseFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CourseFeedback"
                        }
                    }
                }
            }
        },
        "/courses/{id}/feedback/summary": {
            "get": {
                "description": "Get course feedback summary by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course feedback summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course feedback summary",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/courses/{id}/members": {
            "get": {
                "description": "Get all members of a course (teacher, aux teachers, and students)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get course members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.CourseMembersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}/remove-aux-teacher": {
            "delete": {
                "description": "Remove an aux teacher from a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Remove an aux teacher from a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Remove aux teacher from course request",
                        "name": "removeAuxTeacherRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RemoveAuxTeacherFromCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            }
        },
        "/courses/{id}/student-feedback": {
            "post": {
                "description": "Create a feedback for a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Create a feedback for a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback request",
                        "name": "feedbackRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateStudentFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.StudentFeedback"
                        }
                    }
                }
            }
        },
        "/courses/{id}/unenroll": {
            "delete": {
                "description": "Unenroll a student from a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Unenroll a student from a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unenrollment request",
                        "name": "unenrollmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UnenrollStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UnenrollStudentResponse"
                        }
                    }
                }
            }
        },
        "/feedback/student/{id}": {
            "get": {
                "description": "Get feedback by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Get feedback by student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Get feedback by student ID request",
                        "name": "getFeedbackByStudentIdRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.GetFeedbackByStudentIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.StudentFeedback"
                            }
                        }
                    }
                }
            }
        },
        "/feedback/student/{id}/summary": {
            "get": {
                "description": "Get student feedback summary by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Get student feedback summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student feedback summary",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/forum/courses/{courseId}/questions": {
            "get": {
                "description": "Get all questions for a specific course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Get questions by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.QuestionResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/courses/{courseId}/search": {
            "get": {
                "description": "Search questions in a course with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Search questions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter by tags",
                        "name": "tags",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SearchQuestionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions": {
            "post": {
                "description": "Create a new question in the forum for a specific course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Create a new question",
                "parameters": [
                    {
                        "description": "Question to create",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.QuestionDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}": {
            "get": {
                "description": "Get a specific question by its ID with all answers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Get question by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.QuestionDetailResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a question's title, description, or tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Update a question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question update data",
                        "name": "question",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateQuestionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.QuestionDetailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a question (only by the author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Delete a question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "authorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}/answers": {
            "post": {
                "description": "Add a new answer to a specific question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Add an answer to a question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Answer to create",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemas.AnswerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}/answers/{answerId}": {
            "put": {
                "description": "Update an answer's content (only by the author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Update an answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Answer ID",
                        "name": "answerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Answer update data",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateAnswerRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "authorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.AnswerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an answer (only by the author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Delete an answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Answer ID",
                        "name": "answerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Author ID",
                        "name": "authorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}/answers/{answerId}/accept": {
            "post": {
                "description": "Accept an answer as the solution (only by the question author)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Accept an answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Answer ID",
                        "name": "answerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Question Author ID",
                        "name": "authorId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}/answers/{answerId}/vote": {
            "post": {
                "description": "Vote up or down on an answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Vote on an answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Answer ID",
                        "name": "answerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a user's vote from an answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Remove vote from answer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Answer ID",
                        "name": "answerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/forum/questions/{questionId}/vote": {
            "post": {
                "description": "Vote up or down on a question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Vote on a question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vote data",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.VoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.VoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a user's vote from a question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "forum"
                ],
                "summary": "Remove vote from question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Question ID",
                        "name": "questionId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/modules": {
            "post": {
                "description": "Create a new module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Module creation",
                "parameters": [
                    {
                        "description": "Module to create",
                        "name": "module",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            }
        },
        "/modules/course/{courseId}": {
            "get": {
                "description": "Get modules by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get modules by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Module"
                            }
                        }
                    }
                }
            }
        },
        "/modules/{id}": {
            "get": {
                "description": "Get a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get a module by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Update a module",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Module to update",
                        "name": "module",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Delete a module",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Module deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/students/{studentUUID}/submissions": {
            "get": {
                "description": "Get submissions by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get submissions by student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Submission"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateSubmissionRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Answer"
                    }
                }
            }
        },
        "model.Answer": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Can be string, []string for multiple choice, or file URL"
                },
                "question_id": {
                    "type": "string"
                },
                "type": {
                    "description": "text, multiple_choice, file",
                    "type": "string"
                }
            }
        },
        "model.Assignment": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "description": "Minutes of tolerance after due_date",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "description": "Minimum score to pass",
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "description": "draft, published",
                    "type": "string"
                },
                "submission_rules": {
                    "description": "Array of rules for submission",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "description": "exam, homework, quiz",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Course": {
            "type": "object",
            "properties": {
                "aux_teachers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "feedback": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CourseFeedback"
                    }
                },
                "id": {
                    "type": "string"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Module"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "students_amount": {
                    "type": "integer"
                },
                "teacher_name": {
                    "type": "string"
                },
                "teacher_uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.CourseFeedback": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "student_uuid": {
                    "type": "string"
                }
            }
        },
        "model.Enrollment": {
            "type": "object",
            "properties": {
                "completed_date": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "enrolled_at": {
                    "type": "string"
                },
                "favourite": {
                    "type": "boolean"
                },
                "feedback": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StudentFeedback"
                    }
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.EnrollmentStatus"
                },
                "student_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.EnrollmentStatus": {
            "type": "string",
            "enum": [
                "active",
                "dropped",
                "completed"
            ],
            "x-enum-varnames": [
                "EnrollmentStatusActive",
                "EnrollmentStatusDropped",
                "EnrollmentStatusCompleted"
            ]
        },
        "model.FeedbackType": {
            "type": "string",
            "enum": [
                "POSITIVO",
                "NEGATIVO",
                "NEUTRO"
            ],
            "x-enum-varnames": [
                "FeedbackTypePositive",
                "FeedbackTypeNegative",
                "FeedbackTypeNeutral"
            ]
        },
        "model.Module": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModuleData"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ModuleData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "module_id": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModuleDataResource"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ModuleDataResource": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "this comes from the frontend so it's a number",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Question": {
            "type": "object",
            "properties": {
                "correct_answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "options": {
                    "description": "For multiple choice",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "integer"
                },
                "points": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.QuestionType"
                }
            }
        },
        "model.QuestionStatus": {
            "type": "string",
            "enum": [
                "open",
                "resolved",
                "closed"
            ],
            "x-enum-varnames": [
                "QuestionStatusOpen",
                "QuestionStatusResolved",
                "QuestionStatusClosed"
            ]
        },
        "model.QuestionTag": {
            "type": "string",
            "enum": [
                "general",
                "teoria",
                "practica",
                "necesito-ayuda",
                "informacion",
                "ejercitacion",
                "otro"
            ],
            "x-enum-varnames": [
                "QuestionTagGeneral",
                "QuestionTagTeoria",
                "QuestionTagPractica",
                "QuestionTagNecesitoAyuda",
                "QuestionTagInformacion",
                "QuestionTagEjercitacion",
                "QuestionTagOtro"
            ]
        },
        "model.QuestionType": {
            "type": "string",
            "enum": [
                "text",
                "multiple_choice",
                "file"
            ],
            "x-enum-varnames": [
                "QuestionTypeText",
                "QuestionTypeMultipleChoice",
                "QuestionTypeFile"
            ]
        },
        "model.StudentFeedback": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "student_uuid": {
                    "type": "string"
                },
                "teacher_uuid": {
                    "type": "string"
                }
            }
        },
        "model.Submission": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "assignment_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/model.SubmissionStatus"
                },
                "student_name": {
                    "type": "string"
                },
                "student_uuid": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SubmissionStatus": {
            "type": "string",
            "enum": [
                "draft",
                "submitted",
                "late"
            ],
            "x-enum-varnames": [
                "SubmissionStatusDraft",
                "SubmissionStatusSubmitted",
                "SubmissionStatusLate"
            ]
        },
        "schemas.AnswerResponse": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_accepted": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "schemas.CourseMembersResponse": {
            "type": "object",
            "properties": {
                "aux_teachers_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "students_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "teacher_id": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateAnswerRequest": {
            "type": "object",
            "required": [
                "author_id",
                "content"
            ],
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateAssignmentRequest": {
            "type": "object",
            "required": [
                "course_id",
                "description",
                "due_date",
                "grace_period",
                "instructions",
                "passing_score",
                "questions",
                "status",
                "title",
                "total_points",
                "type"
            ],
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCourseFeedbackRequest": {
            "type": "object",
            "required": [
                "feedback",
                "feedback_type",
                "score",
                "student_uuid"
            ],
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "score": {
                    "type": "integer"
                },
                "student_uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCourseRequest": {
            "type": "object",
            "required": [
                "capacity",
                "description",
                "end_date",
                "start_date",
                "teacher_id",
                "title"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "teacher_name": {
                    "description": "TODO: this will later be consulted with users service to get the teacher name",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateModuleRequest": {
            "type": "object",
            "required": [
                "course_id",
                "description",
                "title"
            ],
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateQuestionRequest": {
            "type": "object",
            "required": [
                "author_id",
                "course_id",
                "description",
                "title"
            ],
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestionTag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateStudentFeedbackRequest": {
            "type": "object",
            "required": [
                "course_id",
                "feedback",
                "feedback_type",
                "score",
                "student_uuid",
                "teacher_uuid"
            ],
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "score": {
                    "type": "integer"
                },
                "student_uuid": {
                    "type": "string"
                },
                "teacher_uuid": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.EnrollStudentRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "schemas.GetCourseFeedbackRequest": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "end_score": {
                    "type": "integer"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "start_date": {
                    "type": "string"
                },
                "start_score": {
                    "type": "integer"
                }
            }
        },
        "schemas.GetFeedbackByStudentIdRequest": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "end_score": {
                    "type": "integer"
                },
                "feedback_type": {
                    "$ref": "#/definitions/model.FeedbackType"
                },
                "start_date": {
                    "type": "string"
                },
                "start_score": {
                    "type": "integer"
                }
            }
        },
        "schemas.GradeSubmissionRequest": {
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "schemas.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.QuestionDetailResponse": {
            "type": "object",
            "properties": {
                "accepted_answer_id": {
                    "type": "string"
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.AnswerResponse"
                    }
                },
                "author_id": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.QuestionStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestionTag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "schemas.QuestionResponse": {
            "type": "object",
            "properties": {
                "accepted_answer_id": {
                    "type": "string"
                },
                "answer_count": {
                    "type": "integer"
                },
                "author_id": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.QuestionStatus"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestionTag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vote_count": {
                    "type": "integer"
                }
            }
        },
        "schemas.RemoveAuxTeacherFromCourseRequest": {
            "type": "object",
            "required": [
                "aux_teacher_id",
                "teacher_id"
            ],
            "properties": {
                "aux_teacher_id": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                }
            }
        },
        "schemas.SearchQuestionsResponse": {
            "type": "object",
            "properties": {
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.QuestionResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "schemas.SetFavouriteCourseRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.SetFavouriteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UnenrollStudentRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UnenrollStudentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UnsetFavouriteCourseRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UnsetFavouriteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateAnswerRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateAssignmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateCourseRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateModuleRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ModuleData"
                    }
                },
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateQuestionRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.QuestionTag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.VoteRequest": {
            "type": "object",
            "required": [
                "user_id",
                "vote_type"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                },
                "vote_type": {
                    "type": "integer"
                }
            }
        },
        "schemas.VoteResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Courses Service API",
	Description:      "API for managing courses and related resources",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
