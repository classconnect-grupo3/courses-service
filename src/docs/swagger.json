{
    "swagger": "2.0",
    "info": {
        "description": "API for managing courses and related resources",
        "title": "Courses Service API",
        "contact": {
            "name": "El mejor grupo de todos ndea deau",
            "url": "https://github.com/classconnect-grupo3",
            "email": "classconnectingsoft2@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/assignments": {
            "get": {
                "description": "Get all assignments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get all assignments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Assignment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an assignment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Create an assignment",
                "parameters": [
                    {
                        "description": "Assignment to create",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            }
        },
        "/assignments/course/{courseId}": {
            "get": {
                "description": "Get assignments by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get assignments by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Assignment"
                            }
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}": {
            "get": {
                "description": "Get an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Get an assignment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Update an assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assignment to update",
                        "name": "assignment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Assignment"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an assignment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Delete an assignment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions": {
            "get": {
                "description": "Get submissions by assignment ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get submissions by assignment ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Submission"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a submission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Create a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission to create",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateSubmissionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}": {
            "get": {
                "description": "Get a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get a submission by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Update a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Submission to update",
                        "name": "submission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}/grade": {
            "put": {
                "description": "Grade a submission by ID (for teachers)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Grade a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Grade request",
                        "name": "gradeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.GradeSubmissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/assignments/{assignmentId}/submissions/{id}/submit": {
            "post": {
                "description": "Submit a submission by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Submit a submission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Assignment ID",
                        "name": "assignmentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Submission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Submission"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Get all courses available in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get all courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Course creation",
                "parameters": [
                    {
                        "description": "Course to create",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            }
        },
        "/courses/favourite/{studentId}": {
            "get": {
                "description": "Get favourite courses by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get favourite courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/student/{studentId}": {
            "get": {
                "description": "Get courses by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get courses by student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/teacher/{teacherId}": {
            "get": {
                "description": "Get a course by teacher ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by teacher ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "teacherId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/title/{title}": {
            "get": {
                "description": "Get a course by title",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by title",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course title",
                        "name": "title",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/user/{userId}": {
            "get": {
                "description": "Get courses by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get courses by user ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Course"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Get a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Update a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course to update",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Delete a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.DeleteCourseResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}/enroll": {
            "post": {
                "description": "Enroll a student in a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Enroll a student in a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enrollment request",
                        "name": "enrollmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.EnrollStudentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/courses/{id}/enrollments": {
            "get": {
                "description": "Get enrollments by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Get enrollments by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Enrollment"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{id}/favourite": {
            "post": {
                "description": "Set a course as favourite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Set a course as favourite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Favourite course request",
                        "name": "favouriteCourseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.SetFavouriteCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SetFavouriteCourseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unset a course as favourite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Unset a course as favourite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unset favourite course request",
                        "name": "unsetFavouriteCourseRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UnsetFavouriteCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UnsetFavouriteCourseResponse"
                        }
                    }
                }
            }
        },
        "/courses/{id}/remove-aux-teacher": {
            "delete": {
                "description": "Remove an aux teacher from a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Remove an aux teacher from a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Remove aux teacher from course request",
                        "name": "removeAuxTeacherRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.RemoveAuxTeacherFromCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Course"
                        }
                    }
                }
            }
        },
        "/courses/{id}/unenroll": {
            "delete": {
                "description": "Unenroll a student from a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enrollments"
                ],
                "summary": "Unenroll a student from a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Unenrollment request",
                        "name": "unenrollmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UnenrollStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.UnenrollStudentResponse"
                        }
                    }
                }
            }
        },
        "/modules": {
            "post": {
                "description": "Create a new module",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Module creation",
                "parameters": [
                    {
                        "description": "Module to create",
                        "name": "module",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.CreateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            }
        },
        "/modules/course/{courseId}": {
            "get": {
                "description": "Get modules by course ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get modules by course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "courseId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Module"
                            }
                        }
                    }
                }
            }
        },
        "/modules/{id}": {
            "get": {
                "description": "Get a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Get a module by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Update a module",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Module to update",
                        "name": "module",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.UpdateModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Module"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a module by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "modules"
                ],
                "summary": "Delete a module",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Module deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/students/{studentUUID}/submissions": {
            "get": {
                "description": "Get submissions by student ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "submissions"
                ],
                "summary": "Get submissions by student ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Student ID",
                        "name": "studentUUID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Submission"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateSubmissionRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Answer"
                    }
                }
            }
        },
        "model.Answer": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Can be string, []string for multiple choice, or file URL"
                },
                "question_id": {
                    "type": "string"
                },
                "type": {
                    "description": "text, multiple_choice, file",
                    "type": "string"
                }
            }
        },
        "model.Assignment": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "description": "Minutes of tolerance after due_date",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "description": "Minimum score to pass",
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "description": "draft, published",
                    "type": "string"
                },
                "submission_rules": {
                    "description": "Array of rules for submission",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "description": "exam, homework, quiz",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Course": {
            "type": "object",
            "properties": {
                "aux_teachers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Module"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "students_amount": {
                    "type": "integer"
                },
                "teacher_name": {
                    "type": "string"
                },
                "teacher_uuid": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Enrollment": {
            "type": "object",
            "properties": {
                "completed_date": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "enrolled_at": {
                    "type": "string"
                },
                "favourite": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/model.EnrollmentStatus"
                },
                "student_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.EnrollmentStatus": {
            "type": "string",
            "enum": [
                "active",
                "dropped",
                "completed"
            ],
            "x-enum-varnames": [
                "EnrollmentStatusActive",
                "EnrollmentStatusDropped",
                "EnrollmentStatusCompleted"
            ]
        },
        "model.Module": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "TODO change this with media in the future",
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Question": {
            "type": "object",
            "properties": {
                "correct_answers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "options": {
                    "description": "For multiple choice",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "integer"
                },
                "points": {
                    "type": "number"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.QuestionType"
                }
            }
        },
        "model.QuestionType": {
            "type": "string",
            "enum": [
                "text",
                "multiple_choice",
                "file"
            ],
            "x-enum-varnames": [
                "QuestionTypeText",
                "QuestionTypeMultipleChoice",
                "QuestionTypeFile"
            ]
        },
        "model.Submission": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "assignment_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "$ref": "#/definitions/model.SubmissionStatus"
                },
                "student_name": {
                    "type": "string"
                },
                "student_uuid": {
                    "type": "string"
                },
                "submitted_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.SubmissionStatus": {
            "type": "string",
            "enum": [
                "draft",
                "submitted",
                "late"
            ],
            "x-enum-varnames": [
                "SubmissionStatusDraft",
                "SubmissionStatusSubmitted",
                "SubmissionStatusLate"
            ]
        },
        "schemas.CreateAssignmentRequest": {
            "type": "object",
            "required": [
                "course_id",
                "description",
                "due_date",
                "grace_period",
                "instructions",
                "passing_score",
                "questions",
                "status",
                "title",
                "total_points",
                "type"
            ],
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateCourseRequest": {
            "type": "object",
            "required": [
                "capacity",
                "description",
                "end_date",
                "start_date",
                "teacher_id",
                "title"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "teacher_name": {
                    "description": "TODO: this will later be consulted with users service to get the teacher name",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateModuleRequest": {
            "type": "object",
            "required": [
                "course_id",
                "description",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "course_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.DeleteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.EnrollStudentRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.GradeSubmissionRequest": {
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "schemas.RemoveAuxTeacherFromCourseRequest": {
            "type": "object",
            "required": [
                "aux_teacher_id",
                "teacher_id"
            ],
            "properties": {
                "aux_teacher_id": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                }
            }
        },
        "schemas.SetFavouriteCourseRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.SetFavouriteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UnenrollStudentRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UnenrollStudentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UnsetFavouriteCourseRequest": {
            "type": "object",
            "required": [
                "student_id"
            ],
            "properties": {
                "student_id": {
                    "type": "string"
                }
            }
        },
        "schemas.UnsetFavouriteCourseResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateAssignmentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "grace_period": {
                    "type": "integer"
                },
                "instructions": {
                    "type": "string"
                },
                "passing_score": {
                    "type": "number"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_points": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateCourseRequest": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "teacher_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateModuleRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}